We start to talk about CAP theorem when we start to talk about distributed systems

Distributed system is a system which store data and located on more than one node (virtual machines f.e)
at the same time. (if you work with a service and then one machine of this service was exploded and
you still have access to this service -> this serice is a distributed system) 

Let's talk about each char in CAP:

    Consistency

        Consistency means that all clients see the same data at the same time, 
        no matter which node they connect to. For this to happen, whenever data 
        is written to one node, it must be instantly forwarded or replicated 
        to all the other nodes in the system before the write is deemed ‘successful.’

    Availability

        Availability means that any client making a request for data gets a response, 
        even if one or more nodes are down. Another way to state this—all working nodes 
        in the distributed system return a valid response for any request, without exception.

    Partition tolerance

        A partition is a communications break within a distributed system—a lost or temporarily 
        delayed connection between two nodes. Partition tolerance means that the cluster must 
        continue to work despite any number of communication breakdowns between nodes in the system.

CA - не разделяемый монолит, back in acid
CP - устойчиво, непротиворечиво, но время получения ответа - когда нибудь
AP - время от времени данные не констистентны

Mostly we work with AP (only P irl:)) (bye consistency)

We have BASE design, the idea of this is a pattern based on CAP(AP)
1.We don't think about consistency (Basically available)
2.Soft state - to understand this idea we need to remember transaction term
from one consistency state to another - delete the word consistency ДАННЫЕ В СИСТЕМЕ МОГУТ МЕНЯТСЯ ДАЖЕ ЕСЛИ ВОЗДЕЙТСВИЯ ИЗВНЕ НА СИСТЕМУ НЕТ
3.Eventually consistent - (когда нагрузок не будет система станет констистентной) 


